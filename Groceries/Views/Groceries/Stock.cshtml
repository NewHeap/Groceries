@using GroceriesTool.DAL.Models
@model List<GrocerieViewModel>
@{ 
    ViewBag.Title = "Stocks";
}
<style>
    input[type=number]::-webkit-inner-spin-button,
    input[type=number]::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }
</style>
<h4>Stock</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <table class="table table-striped tablesize">
            <thead>
                <tr>
                    <td>Id</td>
                    <td>Product</td>
                    <td>Stock</td>
                </tr>
            </thead> 
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.Id</td>
                    <td>@item.Product</td>
                    <td><input readonly="readonly" class="stockValue" type="number" value="@item.Stock" data-id="@item.Id" style="width:30px;" /></td>
                    <td><button class="btn btn-default buttonUp plusminsize"><span class="glyphicon glyphicon-menu-up"></span></button>
                    <button class="btn btn-default buttonDown plusminsize"><span class="glyphicon glyphicon-menu-down"></span></button></td>
                </tr>
            }
        </table>
    </div>
</div>
<div>
    @Html.ActionLink("Create new Product", "Create", null, null, new { @class = "btn btn-default actionbtn" })
    <a asp-action="Index" class="btn btn-default actionbtn">Back to List</a>
</div>

@section scripts {
<script type="text/javascript">
    $(document).ready(function () {
        $(".buttonUp").on("click", function () {

            $(this).parent().parent().find(".stockValue").val(function (i, oldVal) {
                var newVal = ++oldVal;
                var obj = { id: $(this).data("id"), stock: newVal };
                saveChanges(obj);
                return newVal;
            });

        });
        $(".buttonDown").on("click", function () {
            $(this).parent().parent().find(".stockValue").val(function (i, oldVal) {
                var newVal = --oldVal;
                var obj = { id: $(this).data("id"), stock: newVal };
                saveChanges(obj);
                return newVal;
            });
        });
        var saveChanges = function (item) {
            if (item.stock <= -1) return;
            $(this).parent().parent().find(".stockValue").val(function (i, oldval) { });
            $.ajax({
                item: item,
                type: "POST",
                url: '@Url.Action("EditStock", "Groceries")',
                data: 'id='+item.id+'&stock='+item.stock,
                success: function (response) {
                    console.log("saved");
                },
                error: function () {
                }
            });
        }
    });
</script>
}